version: '3.7'
services:
   elide-backend:
      container_name: elide-backend
      build:
         context: .
         dockerfile: Dockerfile.prod
      ports:
         - 5000:5000
         - 5555:5555
      depends_on:
         - postgres
         - redis
         - mongo
      env_file:
         - .env
      environment:
         - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
         - BULL_REDIS_HOST=redis
         - BULL_REDIS_PORT=6379
         - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017

   postgres:
      image: postgres:14-alpine
      container_name: elide-postgres
      restart: always
      ports:
         - 5432:5432
      environment:
         - POSTGRES_USER=${POSTGRES_USER}
         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
         - POSTGRES_DB=${POSTGRES_DB}
      volumes:
         - elide_postgres:/var/lib/postgresql/data

   redis:
      image: redis:7.0-alpine
      container_name: elide-redis
      restart: always
      ports:
         - 6379:6379

   mongo:
      image: mongo
      container_name: elide-mongo
      restart: always
      ports:
         - 27017:27017
      environment:
         - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
         - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
         - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
      volumes:
         - elide_mongo:/data/db

   nginx:
      build: ./proxy/nginx
      env_file:
         - ./proxy/proxy.env
      volumes:
         - nginx_conf:/etc/nginx/sites
         - letsencrypt_certs:/etc/letsencrypt
         - certbot_acme_challenge:/var/www/certbot
         - ./vhosts:/etc/nginx/vhosts
         - ./html:/var/www/html
      ports:
            - "80:80"
            - "443:443"
      restart: unless-stopped

   certbot:
      build: ./proxy/certbot
      env_file:
         - ./proxy/proxy.env
      volumes:
         - letsencrypt_certs:/etc/letsencrypt
         - certbot_acme_challenge:/var/www/certbot
      depends_on:
         - nginx

   cron:
      build: ./proxy/cron
      environment:
         - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
         - ./:/workdir:ro
      restart: unless-stopped
      depends_on:
         - nginx
         - certbot


volumes:
   elide_postgres:
      driver: local
   elide_mongo:
      driver: local
   nginx_conf:
      external: true
   letsencrypt_certs:
      external: true
   certbot_acme_challenge: